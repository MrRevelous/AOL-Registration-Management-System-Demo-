/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aol.source;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author BaZinGa
 */
public class FinalizeCoursePanel extends javax.swing.JPanel {

    /**
     * Creates new form FinalizeCoursePanel
     * @param parentFrame
     */
    public FinalizeCoursePanel(JFrame parentFrame) {
        initComponents();
        this.parentFrame=parentFrame;
        this.dbObjectList=new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CourseTypeLabel = new javax.swing.JLabel();
        courseTypeComboBox = new javax.swing.JComboBox();
        ACourseIDLabel = new javax.swing.JLabel();
        courseIDComboBox = new javax.swing.JComboBox();
        finalizeCourseButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CourseTypeLabel.setText("Course Type");
        add(CourseTypeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 47, 80, 20));

        courseTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select---","YES+!", "DSN", "Advance Meditation Program", "Sahaj Samadhi Meditation" }));
        courseTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseTypeComboBoxActionPerformed(evt);
            }
        });
        add(courseTypeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 240, 30));

        ACourseIDLabel.setText("CourseID");
        add(ACourseIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 84, 61, 20));

        courseIDComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"---Select---"}));
        courseIDComboBox.setEnabled(false);
        courseIDComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseIDComboBoxActionPerformed(evt);
            }
        });
        add(courseIDComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 240, 30));

        finalizeCourseButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        finalizeCourseButton.setForeground(new java.awt.Color(0, 204, 0));
        finalizeCourseButton.setText("Finalize Course");
        finalizeCourseButton.setEnabled(false);
        finalizeCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizeCourseButtonActionPerformed(evt);
            }
        });
        add(finalizeCourseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 159, 246, 34));
    }// </editor-fold>//GEN-END:initComponents

    private void courseTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseTypeComboBoxActionPerformed
        // TODO add your handling code here:
        this.courseIDComboBox.setEnabled(false);
        if(this.courseIDComboBox.getComponentCount()!=0){
            this.courseIDComboBox.removeAllItems();
            this.courseIDComboBox.addItem("---Select---");
        }
        if(this.courseTypeComboBox.getSelectedIndex()!=0){
            boolean flag=false;
            try(MongoClient mongoClient=new MongoClient("localhost",27017)){
                DB db=mongoClient.getDB("AOLReg");
                DBCollection dBCollection=db.getCollection("CurrentCourses");
                BasicDBObject basicDBObject=new BasicDBObject("CourseType",this.courseTypeComboBox.getSelectedItem().toString());
                try (DBCursor dBCursor = dBCollection.find(basicDBObject)) {
                    while(dBCursor.hasNext()){
                        DBObject bObject=dBCursor.next();
                        this.dbObjectList.add(bObject);
                        this.courseIDComboBox.addItem(bObject.get("CourseID").toString());
                        flag=true;
                    }
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(parentFrame, e);
            }
            if(flag){
                this.courseIDComboBox.setEnabled(true);
            }
            this.finalizeCourseButton.setEnabled(false);
        }
    }//GEN-LAST:event_courseTypeComboBoxActionPerformed

    private void courseIDComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseIDComboBoxActionPerformed
        // TODO add your handling code here:
        System.out.println(this.courseIDComboBox.getSelectedIndex());
        if(this.courseIDComboBox.getSelectedIndex()!=0){
            this.finalizeCourseButton.setEnabled(true);
            switch (this.courseTypeComboBox.getSelectedIndex()) {
                case 1:
                    this.collectionName="YESPlusParticipantsList";
                    
                    break;
                case 2:
                    this.collectionName="DSNParticipantsList";
                    break;
                case 3:            
                    this.collectionName="AdvanceMeditationProgramParticipantsList";
                    break;
                case 4:
                    this.collectionName="SahajSamadhiMeditationParticipantsList";
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_courseIDComboBoxActionPerformed

    private void finalizeCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizeCourseButtonActionPerformed
        // TODO add your handling code here:
        try(MongoClient mongoClient=new MongoClient("localhost",27017)){
            DB db=mongoClient.getDB("AOLReg");
            DBCollection dBCollection=db.getCollection("CurrentCourses");
            BasicDBObject bObject=new BasicDBObject("CourseID",this.courseIDComboBox.getSelectedItem().toString());
            String date=null,courseID=null;
            try(DBCursor dBCursor=dBCollection.find(bObject)){
                if(dBCursor.hasNext()){
                    DBObject dBObject=dBCursor.next();
                    date=dBObject.get("Date").toString();
                    courseID=this.courseIDComboBox.getSelectedItem().toString();
                }
            }
            
            dBCollection=db.getCollection(this.courseIDComboBox.getSelectedItem().toString());
            try(DBCursor dBCursor=dBCollection.find()){
                while(dBCursor.hasNext()){
                    DBObject dBObject=dBCursor.next();
                    dBObject.put("Date of Course", date);
                    dBObject.put("courseID", courseID);
                    dBCollection=db.getCollection(collectionName);
                    dBCollection.insert(dBObject);
                }
            }
            
            dBCollection=db.getCollection(this.courseIDComboBox.getSelectedItem().toString());
            dBCollection.drop();
            
            dBCollection=db.getCollection("CurrentCourses");
            bObject.clear();
            bObject=new BasicDBObject("CourseID",this.courseIDComboBox.getSelectedItem().toString());
            try(DBCursor dBCursor=dBCollection.find(bObject)){
                if(dBCursor.hasNext()){
                    dBCollection=db.getCollection("AllPreviousCourses");
                    DBObject dBObject=dBCursor.next();
                    dBCollection.insert(dBObject);
                    dBCollection=db.getCollection("CurrentCourses");
                    dBCollection.remove(bObject);                
                }
            }
            JOptionPane.showMessageDialog(parentFrame, "Course Finalized!");
            this.finalizeCourseButton.setEnabled(false);
        }catch(Exception E){
            JOptionPane.showMessageDialog(parentFrame, E);
        }
    }//GEN-LAST:event_finalizeCourseButtonActionPerformed

    private ArrayList <DBObject> dbObjectList=null;
    private final JFrame parentFrame;
    private String courseID,collectionName,courseDate;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ACourseIDLabel;
    private javax.swing.JLabel CourseTypeLabel;
    private javax.swing.JComboBox courseIDComboBox;
    private javax.swing.JComboBox courseTypeComboBox;
    private javax.swing.JButton finalizeCourseButton;
    // End of variables declaration//GEN-END:variables
}
