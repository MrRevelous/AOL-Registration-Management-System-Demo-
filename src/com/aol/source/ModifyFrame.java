/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aol.source;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author BaZinGa
 */
public class ModifyFrame extends javax.swing.JFrame {
    private String gender=null;
    private String maritalStatus=null;

    /**
     * Creates new form ModifyFrame
     * @param name
     * @param number
     * @param courseID
     * @param previousPanel
     */
    public ModifyFrame(String name,String number,String courseID,JPanel previousPanel) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        genderButtonGroup = new ButtonGroup();
        genderButtonGroup.add(MaleRadioButton);
        genderButtonGroup.add(FemaleRadioButton);
        maritalStatusButtonGroup = new ButtonGroup();
        maritalStatusButtonGroup.add(MarriedRadioButton);
        maritalStatusButtonGroup.add(UnmarriedRadioButton);
        this.calendarPanel.setVisible(false);
        this.calendarOkButton.setVisible(false);
        this.name=name;
        this.number=number;
        this.courseID=courseID;
        this.previousPanel=previousPanel;
        this.nameTextField.setText(name);
        this.mobileNoFormattedTextField.setText(number);
        try(MongoClient mongoClient=new MongoClient("localhost",27017)){
            DB db=mongoClient.getDB("AOLReg");
            DBCollection dBCollection=db.getCollection(this.courseID);
            BasicDBObject basicDBObject=new BasicDBObject("Name",this.name)
                    .append("Mobile No", this.number);
            try (DBCursor dBCursor = dBCollection.find(basicDBObject)) {
                if(dBCursor.hasNext()){
                    DBObject dBObject=dBCursor.next();
                    String str=dBObject.get("Gender").toString();
                    if(str.equals("Male")){
                        genderButtonGroup.setSelected(this.MaleRadioButton.getModel(), true);
                        gender="Male";
                    }
                    else if(str.equals("Female")){
                        genderButtonGroup.setSelected(this.FemaleRadioButton.getModel(), true);
                        gender="Female";
                    }System.out.println(str);
                    str=dBObject.get("Marital Status").toString();
                    if(str.equals("Married")){
                        maritalStatusButtonGroup.setSelected(this.MarriedRadioButton.getModel(), true);
                        maritalStatus="Married";
                    }
                    else if(str.equals("Unmarried")){
                        maritalStatusButtonGroup.setSelected(this.UnmarriedRadioButton.getModel(), true);
                        maritalStatus="Unmarried";
                    }
                    System.out.println(str);
                    this.dobTextField.setText(dBObject.get("DOB").toString());
                    this.addressTextArea.setText(dBObject.get("Address").toString());
                    this.professionTextField.setText(dBObject.get("Profession").toString());
                    this.emailIDTextField.setText(dBObject.get("Email").toString());
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        MaleRadioButton = new javax.swing.JRadioButton();
        FemaleRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        MarriedRadioButton = new javax.swing.JRadioButton();
        UnmarriedRadioButton = new javax.swing.JRadioButton();
        DOBLabel = new javax.swing.JLabel();
        dobTextField = new javax.swing.JTextField();
        calendarOkButton = new javax.swing.JButton();
        calendarPanel = new de.wannawork.jcalendar.JCalendarPanel();
        addressLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        ProfessionalLabel = new javax.swing.JLabel();
        professionTextField = new javax.swing.JTextField();
        EmailIDLabel = new javax.swing.JLabel();
        emailIDTextField = new javax.swing.JTextField();
        mobileNoLabel = new javax.swing.JLabel();
        mobileNoFormattedTextField = new javax.swing.JFormattedTextField();
        jSeparator2 = new javax.swing.JSeparator();
        SubmitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NameLabel.setText("Name");
        getContentPane().add(NameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 38, 61, 20));

        nameTextField.setEditable(false);
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 33, 240, 30));

        jLabel2.setText("Gender");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 83, 60, -1));

        MaleRadioButton.setText("Male");
        MaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaleRadioButtonActionPerformed(evt);
            }
        });
        getContentPane().add(MaleRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 83, 61, -1));

        FemaleRadioButton.setText("Female");
        FemaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FemaleRadioButtonActionPerformed(evt);
            }
        });
        getContentPane().add(FemaleRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 83, 100, -1));

        jLabel1.setText("Marital Status");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 113, 70, 20));

        MarriedRadioButton.setText("Married");
        MarriedRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarriedRadioButtonActionPerformed(evt);
            }
        });
        getContentPane().add(MarriedRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 113, -1, -1));

        UnmarriedRadioButton.setText("Unmarried");
        UnmarriedRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnmarriedRadioButtonActionPerformed(evt);
            }
        });
        getContentPane().add(UnmarriedRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 113, 100, -1));

        DOBLabel.setText("DOB");
        getContentPane().add(DOBLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 154, 61, 20));

        dobTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dobTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dobTextFieldFocusLost(evt);
            }
        });
        dobTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(dobTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 154, 80, 30));

        calendarOkButton.setText("Ok");
        calendarOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calendarOkButtonActionPerformed(evt);
            }
        });
        getContentPane().add(calendarOkButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 154, -1, 20));

        calendarPanel.setBackground(new java.awt.Color(51, 255, 255));
        calendarPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                calendarPanelStateChanged(evt);
            }
        });
        getContentPane().add(calendarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 209, 140, 180));

        addressLabel.setText("Address");
        getContentPane().add(addressLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 119, 70, -1));

        addressTextArea.setColumns(20);
        addressTextArea.setRows(5);
        jScrollPane1.setViewportView(addressTextArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 95, 240, 60));

        ProfessionalLabel.setText("Profession");
        getContentPane().add(ProfessionalLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 181, 70, -1));

        professionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                professionTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(professionTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 173, 240, 30));

        EmailIDLabel.setText("E-mail Id");
        getContentPane().add(EmailIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 238, 60, -1));
        getContentPane().add(emailIDTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 230, 240, 30));

        mobileNoLabel.setText("Mobile No.");
        getContentPane().add(mobileNoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 49, 70, -1));

        mobileNoFormattedTextField.setEditable(false);
        mobileNoFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileNoFormattedTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(mobileNoFormattedTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 41, 161, 30));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 10, 420));

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(SubmitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 429, 110, 30));

        cancelButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(204, 0, 0));
        cancelButton.setText("X");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 8, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void MaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaleRadioButtonActionPerformed
        // TODO add your handling code here:
        this.gender="Male";
    }//GEN-LAST:event_MaleRadioButtonActionPerformed

    private void FemaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FemaleRadioButtonActionPerformed
        // TODO add your handling code here:
        this.gender="Female";
    }//GEN-LAST:event_FemaleRadioButtonActionPerformed

    private void MarriedRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarriedRadioButtonActionPerformed
        // TODO add your handling code here:
        this.maritalStatus="Married";
    }//GEN-LAST:event_MarriedRadioButtonActionPerformed

    private void UnmarriedRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnmarriedRadioButtonActionPerformed
        // TODO add your handling code here:
        this.maritalStatus="Unmaried";
    }//GEN-LAST:event_UnmarriedRadioButtonActionPerformed

    private void dobTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dobTextFieldFocusGained
        // TODO add your handling code here:
        this.calendarPanel.setVisible(true);
        this.calendarOkButton.setVisible(true);
    }//GEN-LAST:event_dobTextFieldFocusGained

    private void dobTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dobTextFieldFocusLost
        // TODO add your handling code here:
        this.calendarPanel.setVisible(false);
        this.calendarOkButton.setVisible(false);
    }//GEN-LAST:event_dobTextFieldFocusLost

    private void dobTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobTextFieldActionPerformed

    private void calendarOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calendarOkButtonActionPerformed
        Date date = this.calendarPanel.getDate();
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-YYYY");
        String format = df.format(date);
        dobTextField.setText(format);
        this.calendarPanel.setVisible(false);
        this.calendarOkButton.setVisible(false);
    }//GEN-LAST:event_calendarOkButtonActionPerformed

    private void calendarPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_calendarPanelStateChanged
        Date date = this.calendarPanel.getDate();
        SimpleDateFormat df = new SimpleDateFormat("dd/mm/yyyy");
        String format = df.format(date);
        dobTextField.setText(format);
    }//GEN-LAST:event_calendarPanelStateChanged

    private void professionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_professionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_professionTextFieldActionPerformed

    private void mobileNoFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileNoFormattedTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileNoFormattedTextFieldActionPerformed
    
    public boolean checkValid(){
    if(this.nameTextField.getText().equals("")
                ||this.addressTextArea.getText().equals("")
                ||this.professionTextField.getText().equals("")
                ||this.emailIDTextField.getText().equals("")
                ||this.dobTextField.getText().equals("")
                ||this.gender==null
                ||this.maritalStatus==null){
            JOptionPane.showMessageDialog(this, "One or More Field Empty!");
            return false;
        }

        else{
            try {
                String date=this.dobTextField.getText();
                SimpleDateFormat simpleDateFormat=new SimpleDateFormat("dd-MM-YYYY");
                Date dob=(Date)simpleDateFormat.parse(date);
                System.out.println(dob);
                Calendar calendar=Calendar.getInstance();
                calendar.setTime(dob);
                calendar.add(Calendar.YEAR, 18);
                Date dateof16=calendar.getTime();
                Date today=new Date();
                if(today.compareTo(dateof16)<0){
                    JOptionPane.showMessageDialog(this, "Minimum require age is 18");
                    return false;
                }
                
            } catch (ParseException ex) {
                Logger.getLogger(ApplicationFormPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

            
            Pattern pattern=Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
			    	    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
            Matcher matcher=pattern.matcher(this.emailIDTextField.getText());
            if(matcher.matches()==false){
                JOptionPane.showMessageDialog(this, "Please Enter a Valid Email ID");
                return false;
            }

            pattern=Pattern.compile("\\d{10}");
            matcher=pattern.matcher(this.mobileNoFormattedTextField.getText());
            if(matcher.matches()==false){
                JOptionPane.showMessageDialog(this, "Please Enter a Valid Mobile Number!");
                return false;
            }
        }
        return true;
    }
    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        // TODO add your handling code here:

        if(checkValid()==true){
            try(MongoClient mongoClient=new MongoClient("localhost",27017)){
                DB db=mongoClient.getDB("AOLReg");
                DBCollection dBCollection=db.getCollection(this.courseID);
                BasicDBObject basicDBObject=new BasicDBObject("Name",this.name)
                        .append("Mobile No", this.number);
                BasicDBObject bObject=new BasicDBObject("Gender", this.gender)
                .append("Marital Status", this.maritalStatus)
                .append("DOB", this.dobTextField.getText())
                .append("Address", this.addressTextArea.getText())
                .append("Profession", this.professionTextField.getText())
                .append("Email", this.emailIDTextField.getText());
                BasicDBObject bdbo=new BasicDBObject("$set",bObject);
                dBCollection.update(basicDBObject,bdbo);
                JOptionPane.showMessageDialog(this, "Modified Successfully!");
                this.resetAll();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, e);
            }finally{
                this.setVisible(false);
                this.dispose();
                this.previousPanel.setVisible(true);
            }
        }
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        resetAll();
        this.setVisible(false);
        this.dispose();
        this.previousPanel.setVisible(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    public void resetAll(){
        this.nameTextField.setText("");
        this.genderButtonGroup.clearSelection();
        this.gender=null;
        this.maritalStatusButtonGroup.clearSelection();
        this.maritalStatus=null;
        this.dobTextField.setText("");
        this.addressTextArea.setText("");
        this.professionTextField.setText("");
        this.emailIDTextField.setText("");
        this.mobileNoLabel.setText("");
        this.mobileNoFormattedTextField.setText("");
    }
    
    private JPanel previousPanel;
    private ButtonGroup genderButtonGroup;
    private ButtonGroup maritalStatusButtonGroup;
    private String name=null,number=null,courseID=null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DOBLabel;
    private javax.swing.JLabel EmailIDLabel;
    private javax.swing.JRadioButton FemaleRadioButton;
    private javax.swing.JRadioButton MaleRadioButton;
    private javax.swing.JRadioButton MarriedRadioButton;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JLabel ProfessionalLabel;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JRadioButton UnmarriedRadioButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JButton calendarOkButton;
    private de.wannawork.jcalendar.JCalendarPanel calendarPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField dobTextField;
    private javax.swing.JTextField emailIDTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JFormattedTextField mobileNoFormattedTextField;
    private javax.swing.JLabel mobileNoLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField professionTextField;
    // End of variables declaration//GEN-END:variables
}
